
---
- name: "Download and prepare {{application}} artifacts for offline installation.."
  hosts:
    - localhost
  become: true
  vars:  

    artifact_folder: "/opt/support/sbr-monitoring/artifacts"

    application_url: "https://github.com/prometheus/{{application}}/releases/download"
    source_code_url: "https://github.com/prometheus/{{application}}/archive/refs/tags"
    release_sha256_url: "https://github.com/prometheus/{{application}}/releases/download"

  tasks:
    - name: "Check if variable is present.."
      fail:
        msg: "Variable 'application' is not defined.."
      when: application is not defined

    - name: "Load releases from external variables.."
      ansible.builtin.include_vars:
        dir: variables
        files_matching: "{{ application }}-releases.yaml"
  
    - name: "Load architectures from external variables.."
      ansible.builtin.include_vars:
        dir: variables
        files_matching: "{{ application }}-architectures.yaml"
  
    #
    - name: "Create main artifacts folder.."
      file:
        name: "{{artifact_folder}}"
        state: directory

    - name: "Create applicatiopn artifacts folder.."
      file:
        name: "{{artifact_folder}}/{{application}}"
        state: directory

    - name: "Create folders for {{application}} releases.."
      file:
        name: "{{artifact_folder}}/{{application}}/v{{item}}"
        state: directory
      with_items: "{{releases}}"

    # Download binaries for all declared releases and architectures..
    - name: "Download {{application}} binaries.."
      get_url:
        url: "{{application_url}}/v{{item.0}}/{{application}}-{{item.0}}.{{item.1}}.tar.gz"
        dest: "{{artifact_folder}}/{{application}}/v{{item.0}}/{{application}}-{{item.0}}.{{item.1}}.tar.gz"
      with_nested:
      - "{{releases}}"
      - "{{architectures}}"
    
    # Download source code in tar.gz and zip..
    - name: "Download source code in tar.gz of {{application}}.."
      get_url:
        url: "{{source_code_url}}/v{{item}}.tar.gz"
        dest: "{{artifact_folder}}/{{application}}/v{{item}}/{{application}}-{{item}}-source-code.tar.gz"
      with_items: "{{releases}}"
     
    - name: "Download source code in zip of {{application}}.."
      get_url:
        url: "{{source_code_url}}/v{{item}}.zip"
        dest: "{{artifact_folder}}/{{application}}/v{{item}}/{{application}}-{{item}}-source-code.zip"
      with_items: "{{releases}}"

    # Download sha256sums.txt..
    - name: "Download sha256sums.txt of {{application}}.."
      get_url:
        url: "{{release_sha256_url}}/v{{item}}/sha256sums.txt"
        dest: "{{artifact_folder}}/{{application}}/v{{item}}/sha256sums.txt"
      with_items: "{{releases}}"